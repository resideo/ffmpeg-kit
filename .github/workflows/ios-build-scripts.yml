name: ios build scripts

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - main
      - 'build-v*'
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'

jobs:
  build-main-on-macos-monterey:
    name: ios main on monterey
    runs-on: macos-12
    strategy:
      matrix:
        xcode: [ '13.4.1', '14.0.1' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: Upload XCFramework Artifacts
        if: ${{ matrix.xcode == '14.0.1' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: ios-xcframework
          path: prebuilt/bundle-apple-xcframework-ios/
          retention-days: 1
          
  build-main-on-macos-bigsur:
    name: ios main on big sur
    runs-on: macos-11
    strategy:
      matrix:
        xcode: [ '12.5.1', '13.2.1' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
        
  build-lts-on-macos-bigsur:
    name: ios lts on big sur
    runs-on: macos-11
    strategy:
      matrix:
        xcode: [ '11.7', '12.4' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --lts --enable-ios-audiotoolbox --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: Upload LTS Framework Artifacts
        if: ${{ matrix.xcode == '12.4' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: ios-framework-lts
          path: prebuilt/bundle-apple-framework-ios-lts/
          retention-days: 1

  create-flutter-release:
    name: Create Flutter Release
    needs: [build-main-on-macos-monterey, build-lts-on-macos-bigsur]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      
      - name: Download XCFramework artifacts
        uses: actions/download-artifact@v2
        with:
          name: ios-xcframework
          path: ios-xcframework
      
      - name: Download LTS Framework artifacts
        uses: actions/download-artifact@v2
        with:
          name: ios-framework-lts
          path: ios-framework-lts
      
      - name: Prepare Flutter release package
        run: |
          mkdir -p flutter-package/ios
          cp -r ios-xcframework/* flutter-package/ios/
          cp -r ios-framework-lts/* flutter-package/ios/
          
          # Copy flutter platform files
          cp -r flutter flutter-package/
          
          cd flutter-package
          zip -r ../ffmpeg-kit-flutter-ios.zip .
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat flutter/flutter/pubspec.yaml | grep "version:" | head -n 1 | awk '{print $2}' | tr -d ' ')
          echo "::set-output name=version::$VERSION"
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ffmpeg-kit-flutter-ios.zip
          tag_name: flutter.v${{ steps.get_version.outputs.version }}
          name: Flutter v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## FFmpegKit Flutter Release v${{ steps.get_version.outputs.version }}
            
            This release contains the iOS libraries for the FFmpegKit Flutter package.
            
            ### Installation
            
            ```yaml
            dependencies:
              ffmpeg_kit_flutter: ${{ steps.get_version.outputs.version }}
            ```
            
            For more information, see the [Flutter documentation](https://github.com/arthenica/ffmpeg-kit/tree/main/flutter/flutter).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}